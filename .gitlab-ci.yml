stages:
  - build
  - test
  - lint
  - push
  - new_release
  - deploy

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  only:
    - main
    - dev
    - merge_requests
  script:
    - docker build --tag="$CI_REGISTRY_IMAGE":"$CI_COMMIT_REF_NAME" .

test:
  stage: test
  only:
    - main
    - dev
    - merge_requests
  script:
    - docker-compose run simple_app python manage.py test

lint:
  stage: lint
  only:
    - merge_requests
  script:
    - docker-compose run simple_app pylint simple_app

push:
  stage: push
  only:
    - main
    - dev
  script:
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_REF_NAME"

new_release:
  stage: new_release
  script:
    - echo "Create new release."
  rules:
    - if: "$CI_COMMIT_TAG"
      when: always
  release:
    tag: "$CI_COMMIT_TAG"
    description: "Release for $CI_COMMIT_TAG"

deploy dev:
  stage: deploy
  environment:
    name: dev
  tags:
    - dev
  only:
    - main
    - dev
  script:
    - docker-compose pull
    - docker-compose down
    - docker-compose up -d

deploy prod:
  stage: deploy
  when: manual
  environment:
    name: prod
  tags:
    - prod
  only:
    - main
  script:
    - docker-compose pull
    - docker-compose down
    - docker-compose up -d

